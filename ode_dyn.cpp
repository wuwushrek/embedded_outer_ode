//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
// File: ode_dyn.cpp
//
// MATLAB Coder version            : 3.4
// C/C++ source code generated on  : 13-Aug-2018 12:56:53
//

// Include Files
#include "ode_dyn.h"

// Function Definitions

//
// ODE_DERIVATIVES
//     ODE_DER = ODE_DERIVATIVES(IN1)
// Arguments    : const AF1 in1[2]
//                AF1 ode_der[4]
// Return Type  : void
//
void ode_derivatives(const AF1 in1[2], AF1 ode_der[4])
{
  AF1 t2;
  AF1 t3;
  AF1 t4;
  AF1 t5;

  //     This function was generated by the Symbolic Math Toolbox version 8.0.
  //     13-Aug-2018 12:56:49
  t2 = in1[0] * in1[0];
  t3 = t2 * in1[1] * 1.5F;
  t4 = -t3 + in1[0];
  t5 = (t3 - in1[0] * 2.0F) + 1.0F;
  t3 = t2 * t4 * 0.75F;
  t2 = in1[0] * in1[1] * 3.0F;
  ode_der[0] = t5;
  ode_der[1] = t3 + t5 * (t2 - 2.0F) * 0.5F;
  ode_der[2] = t4;
  ode_der[3] = -t3 - t5 * (t2 - 1.0F) * 0.5F;
}

//
// ODE_FUNCTION
//     ODE_FUN = ODE_FUNCTION(IN1)
// Arguments    : const AF1 in1[2]
//                AF1 ode_fun[2]
// Return Type  : void
//
void ode_function(const AF1 in1[2], AF1 ode_fun[2])
{
  AF1 t3;

  //     This function was generated by the Symbolic Math Toolbox version 8.0.
  //     13-Aug-2018 12:56:49
  t3 = in1[0] * in1[0] * in1[1] * 1.5F;
  ode_fun[0] = (t3 - in1[0] * 2.0F) + 1.0F;
  ode_fun[1] = -t3 + in1[0];
}

//
// ODE_REMINDER
//     ODE_REM = ODE_REMINDER(IN1)
// Arguments    : const AF1 in1[2]
//                AF1 ode_rem[2]
// Return Type  : void
//
void ode_reminder(const AF1 in1[2], AF1 ode_rem[2])
{
  AF1 t6;
  AF1 t3;
  AF1 t4;
  AF1 t5;
  AF1 t8;
  AF1 t9;
  AF1 t10;
  AF1 t12;
  AF1 t13;

  //     This function was generated by the Symbolic Math Toolbox version 8.0.
  //     13-Aug-2018 12:56:49
  t6 = in1[0] * in1[1] * 3.0F;
  t3 = in1[0] * in1[0];
  t4 = t3 * in1[1] * 1.5F;
  t5 = (t4 - in1[0] * 2.0F) + 1.0F;
  t8 = t4 - in1[0];
  t9 = t5 * in1[0] * 1.5F;
  t10 = t3 * t3;
  t12 = t3 * (t6 - 1.0F) * 0.75F;
  t13 = t8 * in1[0] * 1.5F;
  ode_rem[0] = t5 * (((t12 + t13) - t5 * in1[1] * 1.5F) - (t6 - 2.0F) * (t6 -
    2.0F) * 0.5F) * -0.333333343F - t8 * ((t9 - t10 * 1.125F) + (t6 - 2.0F) * t3
    * 0.75F) * 0.333333343F;
  ode_rem[1] = (t4 - in1[0]) * ((t9 - t10 * 1.125F) + t12) * 0.333333343F + t5 *
    (((t12 + t13) - (t6 - 2.0F) * (t6 - 1.0F) * 0.5F) - t5 * in1[1] * 1.5F) *
    0.333333343F;
}

//
// File trailer for ode_dyn.cpp
//
// [EOF]
//
